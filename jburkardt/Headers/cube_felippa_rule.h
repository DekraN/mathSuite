#ifndef WRAPPER_CUBE_FELIPPA_RULE_H_INCLUDED
#define WRAPPER_CUBE_FELIPPA_RULE_H_INCLUDED

#define cube_volume(a,b) R_DBL(FUNCNAME_CUBEVOLUME(C_PPDBL2(a,b)))
#define i4vec_product(a,b) R_INT(FUNCNAME_I4VECPRODUCT(C_IPI(a,b)))
#define line_unit_o01(a,b) FUNCNAME_LINEUNITO01(C_PPDBL2(a,b))
#define line_unit_o02(a,b) FUNCNAME_LINEUNITO02(C_PPDBL2(a,b))
#define line_unit_o03(a,b) FUNCNAME_LINEUNITO03(C_PPDBL2(a,b))
#define line_unit_o04(a,b) FUNCNAME_LINEUNITO04(C_PPDBL2(a,b))
#define line_unit_o05(a,b) FUNCNAME_LINEUNITO05(C_PPDBL2(a,b))
#define r8vec_direct_product(a,b,c,d,e,f) FUNCNAME_R8VECDIRECTPRODUCT(C_4DT2PIT(a,b,d,e,c,f))
#define r8vec_direct_product2(a,b,c,d,e,f) FUNCNAME_R8VECDIRECTPRODUCT2(C_4DT2PIT(a,b,d,e,c,f))
#define subcomp_next(a,b,c,d,e,f) FUNCNAME_SUBCOMPNEXT(C_2DT3PIPB(a,b,c,e,f,d))

__MATHSUITE __JBURKARDT void * FUNCNAME_CUBEVOLUME(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_I4VECPRODUCT(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_LINEUNITO01(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_LINEUNITO02(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_LINEUNITO03(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_LINEUNITO04(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_LINEUNITO05(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8VECDIRECTPRODUCT(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8VECDIRECTPRODUCT2(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SUBCOMPNEXT(void *);

#endif
