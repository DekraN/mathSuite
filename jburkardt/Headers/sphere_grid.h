#ifndef WRAPPER_SPHERE_GRID_H_INCLUDED
#define WRAPPER_SPHERE_GRID_H_INCLUDED

#define atan4(a,b) R_DBL(FUNCNAME_ATAN4(C_PDBL2(a,b)))
#define icos_num(a,b,c,d) FUNCNAME_ICOSNUM(C_PPINT4(a,b,c,d))
#define sphere_distance_xyz(a,b) R_DBL(FUNCNAME_SPHEREDISTANCEXYZ(C_PPDBL2(a,b)))
#define sphere_cubed_ijk_to_xyz(a,b,c,d,e) FUNCNAME_SPHERECUBEDIJKTOXYZ(C_2DTPIT2DT(a,b,e,c,d))
#define sphere_cubed_line_num(a) R_USHRT(FUNCNAME_SPHERECUBEDLINENUM(C_SUSHRT(a)))
#define sphere_cubed_lines(a,b) FUNCNAME_SPHERECUBEDLINES(C_PUSHRT2(a,b))
#define sphere_cubed_points(a,b) FUNCNAME_SPHERECUBEDPOINTS(C_PUSHRT2(a,b))
#define sphere_cubed_points_face(a,b,c,d,e,f,g,h,i) FUNCNAME_SPHERECUBEDPOINTSFACE(C_7DTPDTPIT(a,b,c,d,e,f,g,h,i))
#define sphere_cubed_point_num(a) R_USHRT(FUNCNAME_SPHERECUBEDPOINTNUM(C_SUSHRT(a)))
#define sphere_grid_q4(a,b) FUNCNAME_SPHEREGRIDQ4(C_PUSHRT2(a,b))
#define sphere_grid_t3(a,b) FUNCNAME_SPHEREGRIDT3(C_PUSHRT2(a,b))
#define sphere_icos_edge_num(a) R_USHRT(FUNCNAME_SPHEREICOSEDGENUM(C_SUSHRT(a)))
#define sphere_icos_face_num(a) R_USHRT(FUNCNAME_SPHEREICOSFACENUM(C_SUSHRT(a)))
#define sphere_icos_point_num(a) R_USHRT(FUNCNAME_SPHEREICOSPOINTNUM(C_SUSHRT(a)))
#define sphere_icos1_points(a,b) FUNCNAME_SPHEREICOS1POINTS(C_PUSHRT2(a,b))
#define sphere_icos2_points(a,b) FUNCNAME_SPHEREICOS2POINTS(C_PUSHRT2(a,b))
#define sphere_line_project(a,b,c,d,e,f,g,h) R_USHRT(FUNCNAME_SPHERELINEPROJECT(C_ITPITDTPITDTPIT2IT(a,b,c,d,e,f,g,h)))
#define sphere_ll_lines(a,b,c) FUNCNAME_SPHERELLLINES(C_PUSHRT3(a,b,c))
#define sphere_ll_line_num(a,b,c) R_USHRT(FUNCNAME_SPHERELLLINENUM(C_PUSHRT3(a,b,c)))
#define sphere_ll_points(a,b,c,d,e) FUNCNAME_SPHERELLPOINTS(C_ITPIT3DT(a,b,c,d,e))
#define sphere_ll_point_num(a,b) R_USHRT(FUNCNAME_SPHERELLPOINTNUM(C_PUSHRT2(a,b)))
#define sphere_llq_lines(a,b,c) FUNCNAME_SPHERELLQLINES(C_PUSHRT3(a,b,c))
#define sphere_llq_line_num(a,b) R_USHRT(FUNCNAME_SPHERELLQLINENUM(C_PUSHRT2(a,b)))
#define sphere_spiralpoints(a,b,c) FUNCNAME_SPHERSPIRALPOINTS(C_DTPITIT(c,b,a))
#define sphere_unit_sample(a,b) FUNCNAME_SPHEREUNITSAMPLE(C_DTPI(a,b))

__MATHSUITE __JBURKARDT void * FUNCNAME_SPHEREDISTANCEXYZ(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHERECUBEDIJKTOXYZ(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHERECUBEDPOINTSFACE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHERELINEPROJECT(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHERECUBEDLINES(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHERECUBEDPOINTS(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHEREGRIDQ4(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHEREGRIDT3(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHEREICOS1POINTS(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHEREICOS2POINTS(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHERELLLINES(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHERELLPOINTS(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHERELLQLINES(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHERSPIRALPOINTS(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHEREUNITSAMPLE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHERECUBEDLINENUM(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHERECUBEDPOINTNUM(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHEREICOSEDGENUM(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHEREICOSFACENUM(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHEREICOSPOINTNUM(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_ATAN4(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHERELLLINENUM(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHERELLPOINTNUM(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SPHERELLQLINENUM(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_ICOSNUM(void *);

#endif
