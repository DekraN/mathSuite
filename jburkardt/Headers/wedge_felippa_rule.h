#ifndef WRAPPER_WEDGE_FELIPPA_RULE_H_INCLUDED
#define WRAPPER_WEDGE_FELIPPA_RULE_H_INCLUDED

#define line_o01(a,b) FUNCNAME_LINEO01(C_PPDBL2(a,b))
#define line_o02(a,b) FUNCNAME_LINEO02(C_PPDBL2(a,b))
#define line_o03(a,b) FUNCNAME_LINEO03(C_PPDBL2(a,b))
#define line_o04(a,b) FUNCNAME_LINEO04(C_PPDBL2(a,b))
#define line_o05(a,b) FUNCNAME_LINEO05(C_PPDBL2(a,b))
#define triangle_o01(a,b) FUNCNAME_TRIANGLEO01(C_PPDBL2(a,b))
#define triangle_o03(a,b) FUNCNAME_TRIANGLEO03(C_PPDBL2(a,b))
#define triangle_o03b(a,b) FUNCNAME_TRIANGLEO03B(C_PPDBL2(a,b))
#define triangle_o06(a,b) FUNCNAME_TRIANGLEO06(C_PPDBL2(a,b))
#define triangle_o06b(a,b) FUNCNAME_TRIANGLEO06B(C_PPDBL2(a,b))
#define triangle_o07(a,b) FUNCNAME_TRIANGLEO07(C_PPDBL2(a,b))
#define triangle_o12(a,b) FUNCNAME_TRIANGLEO12(C_PPDBL2(a,b))
#define wedge_rule(a,b,c,d) FUNCNAME_WEDGERULE(C_DTS2PIT(a,b,c,d))
#define wedge01_sample(a,b) FUNCNAME_WEDGE01SAMPLE(C_DTPI(a,b))

__MATHSUITE __JBURKARDT void * FUNCNAME_LINEO01(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_LINEO02(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_LINEO03(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_LINEO04(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_LINEO05(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_TRIANGLEO01(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_TRIANGLEO03(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_TRIANGLEO03B(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_TRIANGLEO06(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_TRIANGLEO06B(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_TRIANGLEO07(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_TRIANGLEO12(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_WEDGERULE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_WEDGE01SAMPLE(void *);

#endif
