#ifndef WRAPPER_WISHART_H_INCLUDED
#define WRAPPER_WISHART_H_INCLUDED

#define r8_exponential_01_sample() R_DBL(FUNCNAME_R8EXPONENTIAL01SAMPLE(NULL))
#define r8_gamma_01_sample(a) R_DBL(FUNCNAME_R8GAMMA01SAMPLE(C_SDBL(a)))
#define r8_gamma_sample(a,b) R_DBL(FUNCNAME_R8GAMMASAMPLE(C_PDBL2(a,b)))
#define r8mat_mmt_new(a,b,c,d,e) FUNCNAME_R8MATMMTNEW(C_3DT2PIT(a,b,c,d,e))
#define r8ut_inverse(a,b) FUNCNAME_R8UTINVERSE(C_DTPIT(a,b))
#define lg_get(a,b,c) FUNCNAME_LGGET(C_I2PI(a,b,c))
#define lg_memory(a,b,c,d) FUNCNAME_LGMEMORY(C_2I2PI(a,b,c,d))
#define lg_set(a,b,c) FUNCNAME_LGSET(C_PINT3(a,b,c))
#define ig_get(a,b,c) FUNCNAME_IGGET(C_I2PI(a,b,c))
#define ig_memory(a,b,c,d) FUNCNAME_IGMEMORY(C_2I2PI(a,b,c,d))
#define ig_set(a,b,c) FUNCNAME_IGSET(C_PINT3(a,b,c))
#define init_generator(a) FUNCNAME_INITGENERATOR(C_SINT(a))
#define initialize() FUNCNAME_INITIALIZE(NULL)
#define multmod(a,b,c) R_INT(FUNCNAME_MULTMOD(C_PINT3(a,b,c)))
#define set_initial_seed(a,b) FUNCNAME_SETINITIALSEED(C_PINT2(a,b))
#define antithetic_get() R_UCHR(FUNCNAME_ANTITHETICGET(NULL))
#define antithetic_memory(a,b) FUNCNAME_ANTITHETICMEMORY(C_IPI(a,b))
#define antithetic_set(a) FUNCNAME_ANTITHETICSET(C_SINT(a))
#define cgn_set(a) FUNCNAME_CGNSET(C_SINT(a))
#define initialized_get() R_UCHR(FUNCNAME_INITIALIZEDGET(NULL))
#define initialized_memory(a,b) FUNCNAME_INITIALIZEDMEMORY(C_IPI(a,b))
#define initialized_set() FUNCNAME_INITIALIZEDSET(NULL)
#define cg_get(a,b,c) FUNCNAME_CGGET(C_I2PI(a,b,c))
#define cg_memory(a,b,c,d) FUNCNAME_CGMEMORY(C_2I2PI(a,b,c,d))
#define cg_set(a,b,c) FUNCNAME_CGSET(C_PINT3(a,b,c))
#define cgn_get() R_INT(FUNCNAME_CGNGET(NULL))
#define cgn_memory(a,b) FUNCNAME_CGNMEMORY(C_IPI(a,b))
#define i4_uni() R_INT(FUNCNAME_I4UNI(NULL))
#define r8_uni_01() R_DBL(FUNCNAME_R8UNI01(NULL))
#define r8_uniform_01_sample() R_DBL(FUNCNAME_R8UNIFORM01SAMPLE(NULL))
#define r8_normal_01_sample() R_DBL(FUNCNAME_R8NORMAL01SAMPLE(NULL))
#define r8_chi_sample(a) R_DBL(FUNCNAME_R8CHISAMPLE(C_SDBL(a)))
#define bartlett_sample(a,b,c) FUNCNAME_BARTLETTSAMPLE(C_2DTPIT(a,b,c))
#define bartlett_unit_sample(a,b) FUNCNAME_BARTLETTUNITSAMPLE(C_PUSHRT2(a,b))
#define wishart_sample(a,b,c) FUNCNAME_WISHARTSAMPLE(C_2DTPIT(a,b,c))
#define wishart_sample_inverse(a,b,c) FUNCNAME_WISHARTSAMPLEINVERSE(C_2DTPIT(a,b,c))
#define wishart_unit_sample(a,b) FUNCNAME_WISHARTUNITSAMPLE(C_PUSHRT2(a,b))
#define wishart_unit_sample_inverse(a,b) FUNCNAME_WISHARTUNITSAMPLEINVERSE(C_PUSHRT2(a,b))

__MATHSUITE __JBURKARDT void * FUNCNAME_MULTMOD(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8MATMMTNEW(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8UTINVERSE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_BARTLETTSAMPLE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_BARTLETTUNITSAMPLE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_WISHARTSAMPLE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_WISHARTSAMPLEINVERSE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_WISHARTUNITSAMPLE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_WISHARTUNITSAMPLEINVERSE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8EXPONENTIAL01SAMPLE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_INITIALIZE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_ANTITHETICGET(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_INITIALIZEDGET(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_INITIALIZEDSET(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CGNGET(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_I4UNI(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8UNI01(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8UNIFORM01SAMPLE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8NORMAL01SAMPLE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_INITGENERATOR(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8GAMMA01SAMPLE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8GAMMASAMPLE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_ANTITHETICSET(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CGNSET(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8CHISAMPLE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SETINITIALSEED(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_ANTITHETICMEMORY(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_INITIALIZEDMEMORY(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CGNMEMORY(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_LGGET(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_LGSET(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_IGGET(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_IGSET(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CGGET(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CGSET(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_LGMEMORY(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_IGMEMORY(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CGMEMORY(void *);

#endif
