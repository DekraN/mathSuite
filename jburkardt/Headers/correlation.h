#ifndef WRAPPER_CORRELATION_H_INCLUDED
#define WRAPPER_CORRELATION_H_INCLUDED

#define correlation_besselj(a,b,c) FUNCNAME_CORRELATIONBESSELJ(C_DTPITIT(a,b,c))
#define correlation_besselk(a,b,c) FUNCNAME_CORRELATIONBESSELK(C_DTPITIT(a,b,c))
#define correlation_constant(a,b,c) FUNCNAME_CORRELATIONCONSTANT(C_DTPITIT(a,b,c))
#define correlation_cubic(a,b,c) FUNCNAME_CORRELATIONCUBIC(C_DTPITIT(a,b,c))
#define correlation_damped_cosine(a,b,c) FUNCNAME_CORRELATIONDAMPEDCOSINE(C_DTPITIT(a,b,c))
#define correlation_damped_sine(a,b,c) FUNCNAME_CORRELATIONDAMPEDSINE(C_DTPITIT(a,b,c))
#define correlation_exponential(a,b,c) FUNCNAME_CORRELATIONEXPONENTIAL(C_DTPITIT(a,b,c))
#define correlation_gaussian(a,b,c) FUNCNAME_CORRELATIONGAUSSIAN(C_DTPITIT(a,b,c))
#define correlation_hole(a,b,c) FUNCNAME_CORRELATIONHOLE(C_DTPITIT(a,b,c))
#define correlation_linear(a,b,c) FUNCNAME_CORRELATIONLINEAR(C_DTPITIT(a,b,c))
#define correlation_matern(a,b,c) FUNCNAME_CORRELATIONMATERN(C_DTPITIT(a,b,c))
#define correlation_pentaspherical(a,b,c) FUNCNAME_CORRELATIONPENTASPHERICAL(C_DTPITIT(a,b,c))
#define correlation_power(a,b,c) FUNCNAME_CORRELATIONPOWER(C_DTPITIT(a,b,c))
#define correlation_rational_quadratic(a,b,c) FUNCNAME_CORRELATIONRATIONALQUADRATIC(C_DTPITIT(a,b,c))
#define correlation_spherical(a,b,c) FUNCNAME_CORRELATIONSPHERICAL(C_DTPITIT(a,b,c))
#define correlation_white_noise(a,b,c) FUNCNAME_CORRELATIONWHITENOISE(C_DTPITIT(a,b,c))
#define r8_b0mp(a,b,c) FUNCNAME_R8B0MP(C_IT2PIT(a,b,c))
#define r8_besi1(a) R_DBL(FUNCNAME_R8BESI1(C_SDBL(a)))
#define r8_besi1e(a) R_DBL(FUNCNAME_R8BESI1E(C_SDBL(a)))
#define r8_besj0(a) R_DBL(FUNCNAME_R8BESJ0(C_SDBL(a)))
#define r8_besk(a,b) R_DBL(FUNCNAME_R8BESK(C_PDBL2(a,b)))
#define r8_besk1(a) R_DBL(FUNCNAME_R8BESK1(C_SDBL(a)))
#define r8_besk1e(a) R_DBL(FUNCNAME_R8BESK1E(C_SDBL(a)))
#define r8_beskes(a,b,c) FUNCNAME_R8BESKES(C_PDBL3(a,b,c))
#define r8_besks(a,b,c) FUNCNAME_R8BESKS(C_PDBL3(a,b,c))
#define r8_csevl(a,b,c) R_DBL(FUNCNAME_R8CSEVL(C_DTPITIT(c,b,a)))
#define r8_gaml(a,b) FUNCNAME_R8GAML(C_PPDBL2(a,b))
#define r8_inits(a,b,c) R_INT(FUNCNAME_R8INITS(C_DTPITIT(b,a,c)))
#define r8_knus(a,b,c,d,e) FUNCNAME_R8KNUS(C_2IT2PITPDT(a,b,c,d,e))
#define r8_lgmc(a) R_DBL(FUNCNAME_R8LGMC(C_SDBL(a)))
#define r8_mach(a) R_DBL(FUNCNAME_R8MACH(C_SUSHRT(a)))
#define r8vec_linspace(a,b,c,d) FUNCNAME_R8VECLINSPACE(C_DT2ITPIT(a,b,c,d))



__MATHSUITE __JBURKARDT void * FUNCNAME_R8B0MP(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8CSEVL(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8INITS(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8KNUS(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8VECLINSPACE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CORRELATIONBESSELJ(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CORRELATIONBESSELK(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CORRELATIONCONSTANT(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CORRELATIONCUBIC(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CORRELATIONDAMPEDCOSINE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CORRELATIONDAMPEDSINE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CORRELATIONEXPONENTIAL(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CORRELATIONGAUSSIAN(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CORRELATIONHOLE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CORRELATIONLINEAR(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CORRELATIONMATERN(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CORRELATIONPENTASPHERICAL(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CORRELATIONPOWER(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CORRELATIONRATIONALQUADRATIC(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CORRELATIONSPHERICAL(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_CORRELATIONWHITENOISE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8BESKES(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8BESKS(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8BESI1(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8BESI1E(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8BESJ0(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8BESK1(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8BESK1E(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8LGMC(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8BESK(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8GAML(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_R8MACH(void *);


#endif
