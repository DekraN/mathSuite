#ifndef WRAPPER_SIMPLEX_GM_RULE_H_INCLUDED
#define WRAPPER_SIMPLEX_GM_RULE_H_INCLUDED

#define simplex_unit_volume(a) R_DBL(FUNCNAME_SIMPLEXUNITVOLUME(C_SUSHRT(a)))
#define monomial_value(a,b,c,d) FUNCNAME_MONOMIALVALUE(C_2DTPIPIT(a,b,d,c))
#define gm_rule_set(a,b,c,d,e) FUNCNAME_GMRULESET(C_I2DT2PIT(a,b,c,d,e))
#define gm_rule_size(a,b) R_USHRT(FUNCNAME_GMRULESIZE(C_IDT(a,b)))
#define simplex_unit_monomial_int(a,b) R_DBL(FUNCNAME_SIMPLEXUNITMONOMIALINT(C_DTPI(a,b)))
#define simplex_unit_monomial_quadrature(a,b,c,d,e) R_DBL(FUNCNAME_SIMPLEXUNITMONOMIALQUADRATURE(C_DTPITDTPIPIT(a,d,c,b,e)))
#define simplex_unit_sample(a,b,c) FUNCNAME_SIMPLEXUNITSAMPLE(C_2DTPI(a,b,c))
#define simplex_unit_to_general(a,b,c,d,e) FUNCNAME_SIMPLEXUNITTOGENERAL(C_2DT2PIT(a,b,c,d,e))

__MATHSUITE __JBURKARDT void * FUNCNAME_GMRULESET(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_GMRULESIZE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SIMPLEXUNITMONOMIALINT(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SIMPLEXUNITMONOMIALQUADRATURE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_MONOMIALVALUE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SIMPLEXUNITSAMPLE(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SIMPLEXUNITTOGENERAL(void *);
__MATHSUITE __JBURKARDT void * FUNCNAME_SIMPLEXUNITVOLUME(void *);

#endif
