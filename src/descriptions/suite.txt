MathSuite Calculus Environment is a very powerful Mathematical Suite which deals
principally with complex algebric and geometric operations. It is powered by
the fabulous ExprEval C Parser. The main purpose of this project is fast
math-oriented algorythm virtualization, with an optimized direct text interface.
Also it brings to you a very powerful and fast Calculus Environment which let
you handle easily interchangeable variable lists, matrixes, LOGS and Settings
Layouts with optimized Items Lists Managing Engine. You'll also be able to
execute your own scriptfiles with a basic math-oriented beta script language.
Some feature regarding Matrixes and Linear Algebra Operations are
LU-Factorization, SVD Decomposition, Rank Calculator, Ill Condition Checking
and more... There are also a very powerful Linear System Solver and Basic
PRELoaded Functions Integrator Engine.
You can see complete last versions changelogs and also more informations
located into program main.c
I'm Also known as DekraN and Wesker013 on Facebook. Contact me at:
marco_chiarelli@yahoo.it or marcochiarelli.nextgenlab@gmail.com, also for fix
your scripts and giving you some advices about your C programming career.
________________________________________________________________________________
Thanks to giggikr: http://forum.html.it/forum/showthread/t-1374455.html for his
own function, cambiabase, which I renamed, modified and adapted to this program.
Thanks to http://elite.polito.it/files/courses/12BHD/progr/Esercizi-C-v2_01.pdf
for some of their scripts. Thanks to Bibek Subedi, for his invertMatrix function
, which I renamed, modified and adapted to this program. Link Source:
http://programming-technique.blogspot.it/2011/09/numerical-methods-inverse-of
-nxn-matrix.html

Thanks to W. Cochran  wcochran@vancouver.wsu.edu for his
Strassen Algorithm Implementation, which I renamed, adapted and modified to this program.
Thanks also to: Computer Science Division | EECS at UC Berkeley for some notions
about Matrix Multiplication Optimizations Techniques:
www.cs.berkeley.edu/~knight/cs267/hw1.html

Massive thanks to Brian Allen Vanderburg II for his fabulous C parser and
inline functions solver, EXPREVAL, which elegantly gave in theory infinite
functionalities and potential to my program. That's the project link with
Online Documentation: http://expreval.sourceforge.net/

Thanks to: http://www.cprogramming.com/tips/ and
http://stackoverflow.com/questions/599365/what-is-your-favorite-c-programming-trick
http://stackoverflow.com/questions/132241/hidden-features-of-c
that are some websites in which I found a lot of useful C tips and tricks, and
they were an important checkpoint for resources retrieving in order to speed-up
and optimize my program.


Still greatly thanks to Bibek Subedi for his website:
http://www.programming-techniques.com/
which put in front of my eyes a new world of C programming. I also recently
renewed the program code by improving a lot of his C tricks and tips.
For example, the upper-triangular Matrixes conversion, which was useful to
enhance some functions like det(...), sgeqsolver ExprEval inline command, etc...

Greatly thanks to Daniel Veillard for his fabulous XML Parser, LIBXML2.

Greatly thanks to vict85 of matematicamente.it Network, for informing
me about the benefits of using generally a single reference for the
Matrix Type, like LAPACK and other Numeric Calculus Environments.

Thanks to Francesco Palma for reporting me some bugs.

...and finally, but not less important, massive thanks to my Informatic
Fundaments Teacher, Mario Alessandro Bochicchio, which gave me a lot of C
advices and some general tricks and tips, that enlarged my professional
informatic horizonts. That's all...
								Marco Chiarelli.